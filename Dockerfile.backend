FROM node:18-alpine as base
RUN apk add --no-cache vips-dev
# Set variables
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

FROM base AS builder
# Set working directory
WORKDIR /app
RUN yarn global add turbo
COPY ./data/app .
RUN turbo prune @turbostrapi/backend --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
RUN apk update
RUN apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev > /dev/null 2>&1
WORKDIR /app

# First install the dependencies (as they change less often)
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/yarn.lock ./yarn.lock
RUN yarn config set network-timeout 600000 -g 
RUN yarn install --production

# Build the project
COPY --from=builder /app/out/full/ .
RUN yarn global add turbo
RUN turbo run build --filter=@turbostrapi/backend...

FROM base AS runner
WORKDIR /app/

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 strapi
USER strapi

COPY --from=installer --chown=strapi:nodejs /app .
ENV PATH /app/node_modules/.bin:$PATH
WORKDIR /app/apps/backend

EXPOSE 1337
CMD ["yarn", "start"]