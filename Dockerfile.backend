FROM node:18-alpine as base
RUN apk add --no-cache vips-dev
# Set variables
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}

FROM base AS builder
# Set working directory
WORKDIR /opt
RUN yarn global add turbo
COPY ./data/project .
RUN turbo prune @turbostrapi/backend --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
RUN apk update
RUN apk add --no-cache build-base gcc autoconf automake zlib-dev libpng-dev > /dev/null 2>&1
WORKDIR /opt

# First install the dependencies (as they change less often)
COPY ./data/project/.gitignore .gitignore
COPY --from=builder /opt/out/json/ .
COPY --from=builder /opt/out/yarn.lock ./yarn.lock
RUN yarn config set network-timeout 600000 -g 
RUN yarn install --production

# Build the project
COPY --from=builder /opt/out/full/ .
RUN yarn global add turbo
RUN turbo run build --filter=@turbostrapi/backend...

FROM base AS runner
WORKDIR /opt
COPY --from=installer /opt .
ENV PATH /opt/node_modules/.bin:$PATH
# Don't run production as root
WORKDIR /opt/apps/backend
RUN chown -R node:node /opt/apps/backend
USER node

VOLUME ["/opt/apps/backend/public/uploads"]

EXPOSE 1337
CMD ["yarn", "start"]