version: "3"
services:
  backend:
    container_name: ${APP_NAME}-backend
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    environment:
      BACKEND_APP_KEYS: ${BACKEND_APP_KEYS}
      BACKEND_API_TOKEN_SALT: ${BACKEND_API_TOKEN_SALT}
      BACKEND_TRANSFER_TOKEN_SALT: ${BACKEND_TRANSFER_TOKEN_SALT}
      BACKEND_JWT_SECRET: ${BACKEND_JWT_SECRET}
      BACKEND_ADMIN_JWT_SECRET: ${BACKEND_ADMIN_JWT_SECRET}
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
      BACKEND_DATABASE_USERNAME: ${BACKEND_DATABASE_USERNAME}
      BACKEND_DATABASE_PASSWORD: ${BACKEND_DATABASE_PASSWORD}
      BACKEND_DATABASE_HOST: ${BACKEND_DATABASE_HOST:-backend-db}
      BACKEND_DATABASE_PORT: ${BACKEND_DATABASE_PORT}
      BACKEND_DATABASE_NAME: ${BACKEND_DATABASE_NAME}
      BACKEND_DATABASE_CLIENT: ${BACKEND_DATABASE_CLIENT}
      NODE_ENV: ${NODE_ENV}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.${APP_NAME}-strapi.loadbalancer.server.port=${BACKEND_PORT}"
      - "traefik.http.routers.${APP_NAME}-strapi.entrypoints=websecure"
      - "traefik.http.routers.${APP_NAME}-strapi.tls=true"
      - "traefik.http.routers.${APP_NAME}-strapi.tls.certresolver=cloudflare"
      - "traefik.http.routers.${APP_NAME}-strapi.rule=Host(`${APP_HOSTNAME_BACKEND}`)"
    networks:
      - traefik
      - strapi
    depends_on:
      - backend-db
    volumes:
      - backend-uploads:/opt/apps/backend/public/uploads

  backend-db:
    container_name: ${APP_NAME}-backend-db
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - .env
    image: postgres:16.1-alpine
    environment:
      POSTGRES_USER: ${BACKEND_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${BACKEND_DATABASE_PASSWORD}
      POSTGRES_DB: ${BACKEND_DATABASE_NAME}
    networks:
      - strapi
    volumes:
      - backend-db:/var/lib/postgresql/data/

  frontend:
    container_name: ${APP_NAME}-frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    restart: unless-stopped
    environment:
      FRONTEND_BACKEND_API_SECRET: ${FRONTEND_BACKEND_API_SECRET}
      FRONTEND_BACKEND_URL: ${FRONTEND_BACKEND_URL}
      NODE_ENV: ${NODE_ENV}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.services.${APP_NAME}-frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.${APP_NAME}-frontend.entrypoints=websecure"
      - "traefik.http.routers.${APP_NAME}-frontend.tls=true"
      - "traefik.http.routers.${APP_NAME}-frontend.tls.certresolver=cloudflare"
      - "traefik.http.routers.${APP_NAME}-frontend.rule=Host(`${APP_HOSTNAME}`)"
    networks:
      - traefik
      - strapi

volumes:
  backend-uploads:
  backend-db:

networks:
  traefik:
    external: true
  strapi:
    name: ${APP_NAME}-strapi-network
    driver: bridge
